#!/bin/bash

set -e -o pipefail

# Setup/how to run
usage() {
    echo "Usage: $0 <GITHUB_USER> <GITHUB_REPO> <NEW_TAG>"
    exit 1
}
[[ -z $1 || -z $2 || -z $3 ]] && usage
set -u

readonly GITHUB_USER=$1
readonly GITHUB_REPO=$2
readonly NEW_TAG=$3

PUBLIC_BUCKET="transcom-tools-us-west-2"
ZIP_NAME=${ZIP_NAME:-deployment.zip}

TARGET=s3://$PUBLIC_BUCKET/$GITHUB_REPO/$NEW_TAG/$ZIP_NAME

if [[ -z "${CIRCLECI+x}" && -z $(type -p ghr) ]]; then
    echo "ERROR: ghr not found, install via: brew install ghr"
    exit
fi

gh release upload --clobber --repo "${GITHUB_USER}/${GITHUB_REPO}" "$NEW_TAG" "$ZIP_NAME" checksums.txt
echo "Uploaded zipfile and checksums to GitHub Release with tag ${NEW_TAG}"

if [[ -n "${CIRCLECI+x}" ]]; then
    # assume roles
    temp_role=$(aws sts assume-role \
                      --role-arn arn:aws:iam::313564602749:role/circleci \
                      --role-session-name circleci )
              AWS_ACCESS_KEY_ID=$(echo "$temp_role" | jq .Credentials.AccessKeyId | xargs)
              export AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY=$(echo "$temp_role" | jq .Credentials.SecretAccessKey | xargs)
              export AWS_SECRET_ACCESS_KEY
              AWS_SESSION_TOKEN=$(echo "$temp_role" | jq .Credentials.SessionToken | xargs)
              export AWS_SESSION_TOKEN
    aws s3 cp "$ZIP_NAME" "$TARGET" --sse AES256
else
    AWS_VAULT_KEYCHAIN_NAME=login aws-vault exec transcom-prod -- aws s3 cp "$ZIP_NAME" "$TARGET" --sse AES256
fi
